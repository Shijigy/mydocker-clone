第一天
Docker run
go build .
sudo ./mydocker run -it /bin/sh
第二天
go build .
sudo ./mydocker run -it /bin/sh
第三天
vi ~/mem-allocate.c
gcc ~/mem-allocate.c -o ~/mem-allocate
sudo ./mydocker run -it -mem 10m /bin/sh
第四添
containerId=$(sudo docker ps --filter "ancestor=busybox:latest"|grep -v IMAGE|awk '{print $1}')
echo "containerId" $containerId
sudo docker export -o busybox.tar $containerId
mkdir busybox
udo tar -xvf busybox.tar -C busybox/
.dockerenv
sudo mv ~/busybox /root/
 sudo ./mydocker run -it  /bin/ls
第五条
sudo mv busybox.tar /root
/mydocker run -it /bin/sh
/ # echo KubeExplorer > tmp/hello.txt
/ # ls /tmp
hello.txt
/ # cat /tmp/hello.txt
KubeExplorer
 ls /root
 ls busybox/tmp
 root@mydocker:~# ls upper/tmp
 hello.txt
 root@mydocker:~# ls merged/tmp
 hello.txt
 / # exit
 root@mydocker:~# ls /root
 busybox  busybox.tar
 root@mydocker:~# ls /root/busybox
 bin  dev  etc  home  proc  root  sys  tmp  usr  var
 第六天
 ./mydocker run -it -v /root/volume:/tmp /bin/sh
/ # echo KubeExplorer > tmp/hello.txt
/ # ls /tmp
hello.txt
/ # cat /tmp/hello.txt
KubeExplorer
/ # exit
//第七天
./mydocker run -it /bin/sh
/ # echo KubeExplorer > tmp/hello.txt
/ # cat /tmp/hello.txt
 ./mydocker commit myimage
 sudo ./mydocker commit myimage
//第八条
go build .
./mydocker run -d top
ps -ef|grep -e PPID -e top
//第九条
./mydocker run -d -name runtop top
 ps -ef|grep -e PPID -e top
 ls /var/lib/mydocker/containers
 cat /var/lib/mydocker/containers/0690341686/config.json
 ./mydocker ps
//第十条
./mydocker run -d -name mytop top
./mydocker ps
./mydocker logs 0439540405
//第11天
./mydocker exec 9365032797 sh
./mydocker exec 9365032797 sh
//第十二条
./mydocker run -d -name bird top
 ./mydocker ps
./mydocker ps
//第十三条
./mydocker run -d -name rm1 top
 ./mydocker ps
./mydocker stop  7984533724
 ./mydocker rm 7984533724
 ./mydocker ps
//第十四条
mv busybox.tar /var/lib/mydocker/image/
./mydocker run -d -name rootfs busybox top
./mydocker ps
./mydocker exec 3393020957 /bin/sh
/ # echo KubeExplorer > a.txt
/ # cat a.txt
./mydocker commit 3393020957 busybox-with-custom
 ./mydocker run -d -name rootfs2 busybox-with-custom top
./mydocker exec 0245441377  /bin/sh
/ # cat a.txt
./mydocker rm 3393020957  -f
//第十五天
./mydocker run -it -name c1 -e user=17x -e name=mydocker busybox sh
./mydocker run -d -name c2 -e user=17x -e name=mydocker busybox top
 env|grep user
 //第十六条
 go test -v -run TestAllocate
 cat /var/lib/mydocker/network/ipam/subnet.json
 go test -v -run TestRelease
 cat /var/lib/mydocker/network/ipam/subnet.json
go test -v -run TestBridgeCreate
 go test -v -run TestBridgeDelete
 //第十七条
./mydocker run -it -net testbridge busybox sh
 ip a
ping 10.0.0.2 -c 4
//第十八条
./mydocker network create --driver bridge --subnet 10.10.10.1/24 testbr
./mydocker network list
ip link show type bridge
 ./mydocker network remove testbr
 ip link show type bridge
 ip r
iptables -t nat -L POSTROUTING
 ./mydocker network list
./mydocker run -it -net testbr busybox sh
ydocker/overlay2/4040058849/merged","time":"2024-06-14T18:45:08+08:00"}
{"level":"info","msg":"Find path /bin/sh","time":"2024-06-14T18:45:08+08:00"}
/ # ip a
